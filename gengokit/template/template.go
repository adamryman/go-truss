// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/handlers/middlewares.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5f\x73\xdb\x36\x12\x7f\x26\x3f\xc5\x86\x53\x5f\x48\x97\x21\xed\xce\xdd\xc3\x29\xd5\x43\x6a\xa7\x73\x99\x69\x6d\x8f\xe5\xa4\x0f\xae\xe7\x06\x02\x97\x24\x2e\x24\xc0\x00\xa0\x64\x8f\x46\xdf\xfd\x66\x01\x88\x96\x52\x3b\x6e\xa7\x79\x88\x40\x60\xf1\xdb\xc5\xfe\xf9\xed\xba\x2c\xe1\x4c\x55\x08\x0d\x4a\xd4\xcc\x62\x05\xcb\x07\xb0\x7a\x34\xa6\x80\xf3\x4b\xb8\xb8\xbc\x81\xf7\xe7\x1f\x6e\x8a\xb8\x2c\xe1\x1a\xf5\x28\xa5\x90\x8d\x17\x80\xb5\xe8\x3a\x50\x2b\xd4\x6b\x2d\x2c\x82\x6d\x85\x81\x5a\x74\xe8\x84\x3f\xa1\x36\x42\xc9\x19\x6c\x36\x45\x58\x6f\xb7\x7b\x07\x70\xce\x2c\xee\x9f\xd2\xf7\x76\x1b\xc7\x03\xe3\x9f\x59\x83\xd0\x33\x21\xe3\x58\xf4\x83\xd2\x16\xd2\x38\x4a\x50\x72\x55\x09\xd9\x94\xff\x33\x4a\x26\x71\x94\xd4\x1d\x6b\xdc\x6f\x6f\xe9\x47\x19\xfa\xdf\x58\xcd\x95\x5c\x85\xa5\x90\x8d\xdb\xb5\xa2\xc7\x24\x8e\xa3\xa4\x51\x1d\x93\x4d\xa1\x74\x53\xde\x97\x12\x6d\xc9\x95\xb4\x78\xef\x00\x1a\xa5\x9a\x0e\x8b\x3d\x91\x46\x0f\xdc\x5f\x13\xb6\x1d\x97\x05\x57\x7d\x39\x7c\x6e\x4a\xd4\x5a\x69\x43\x27\x65\x09\x37\xf4\xee\x05\xea\x95\xe0\x18\x47\xc9\x66\x53\x7c\x70\x46\x5f\x31\xdb\xc2\x9b\xed\x16\x4a\xb3\xe2\x25\xef\x04\x4a\x4b\x3f\x65\xcb\x64\xd5\x21\xdd\x8f\x48\x81\x3f\x81\x17\x2e\x7a\x53\xa2\xd6\xda\xe1\xcf\x5d\x20\xc9\x24\x8e\x86\xa5\x13\xbc\xfa\xe9\x50\x34\x89\xb3\x38\x5e\x31\x4d\x9e\xfd\x2f\xcc\x21\xb8\xad\xb8\x62\xda\xe0\x07\x69\xa7\x5d\xf2\x60\xb1\x18\x3a\x11\xb6\xc8\xf9\xc5\x99\xea\x07\xc6\xc3\x8e\x77\x46\xf1\x9b\x66\x43\xed\x77\x86\x65\x71\x8d\x8d\x30\x16\xf5\x66\x53\x04\xd7\x14\x17\xac\xc7\xed\x96\xbe\x50\x93\xf6\x7a\x94\xdc\x45\x39\xcd\x60\x13\x47\xca\x14\xef\xef\x85\x4d\xcd\xb8\xf4\x9b\x59\xbc\x8d\x63\xfb\x30\x20\xb4\xc8\x2a\xd4\x0b\xd4\x02\x0d\xdc\xde\x79\xab\x02\x40\xda\xc2\xf1\xfe\x79\x06\x0b\xb4\xe9\x8a\x75\xc1\xf8\xcc\xdb\x47\x1a\xb8\x92\xc6\x82\xc6\x2f\xa3\xd0\x58\x5d\x31\x6d\x0d\x08\x69\x61\x0e\x3f\xc4\xd1\xe0\x3e\x67\x5f\xbd\xf9\x82\x90\x72\x48\x66\x49\x7e\x78\x31\x8b\x23\x51\x43\x87\x32\x75\x17\x33\x78\x35\xff\x0a\x79\x13\x47\x91\x46\x3b\x6a\x09\x75\x6f\x8b\xf7\x64\x45\x9d\x26\x2b\xd6\x8d\x08\x47\x5f\x80\x33\x29\x95\x85\x25\x82\x21\x4d\x20\x24\xd8\xb5\x7a\x0b\xfd\x68\x2c\x50\x56\x32\x21\x81\x59\xe8\x90\x19\x0b\x4a\x22\xbc\x9e\xbd\x06\xde\x32\xcd\xb8\x45\x9d\xe4\xb0\x62\x5d\x16\x47\xdb\x60\xfb\xed\xe9\xdd\x5e\xc4\x6e\xb4\xe8\x17\x03\xe3\x98\xee\x0e\xb3\x38\x3a\x6e\x61\x0e\x6c\x18\x50\x56\xe9\x71\x9b\x83\x3b\x2a\x8a\x22\x8b\x77\x96\x4a\xd1\x91\xd7\x9f\xf3\xac\x03\x4f\xb3\xa0\x85\x9e\xb8\xf7\xc2\xc5\xa0\x85\xb4\x75\x9a\x1c\xad\x92\x7c\x0a\x53\x7a\xdc\xfa\x48\x96\x25\x84\xd0\x02\xde\x0b\x63\x0d\x58\x05\x8c\x5b\x60\x06\x6c\x8b\x40\x3a\xad\x50\x92\x75\x2e\x29\x72\x58\x8e\xd6\x53\x4c\xd0\x81\xf7\x82\x1c\x53\x21\xdd\x24\x38\xba\xc5\xb8\x1d\xc3\x0d\x10\xd2\x58\x64\x15\xa8\x1a\x38\xeb\x3a\xb2\x30\x24\x15\x54\x42\x23\xb7\xdd\x43\xe1\xab\x55\x18\xa8\xc8\xa3\x64\x41\xd7\xa9\xf5\x0e\xad\xc2\x1a\x35\x56\x93\x2d\xce\xc6\x25\x3a\x38\xac\x72\x30\x42\x72\x04\x51\x4f\xb8\xeb\x16\xf5\xee\x78\x52\x42\x68\xb5\x56\x7d\x60\xc4\x80\x95\x83\x24\x95\xaa\x7e\x46\x93\x41\x0b\xe3\xe0\xe8\x77\xff\x1a\x81\xad\xd5\xd8\x55\x8f\x76\x14\x3e\x3e\x53\xa1\xb8\x24\xde\xc4\x11\x95\xb3\x0f\x98\x39\x28\x99\x38\x22\xa6\x2c\x3e\x31\x9d\xfe\x23\x9c\xe7\x90\xf8\x55\x92\x43\xf2\x1f\xb7\x4a\x4d\x16\x5e\x6b\x88\x5d\x28\x1d\x5b\x04\xab\x99\x34\x9e\x82\x6b\x45\xae\x32\xc0\x3f\x5e\xff\x02\xc6\x3e\x74\x98\x25\x99\xd7\x9a\xc6\x91\x63\xa6\x77\x55\xa5\xc1\xff\x9b\x83\x53\x1a\x52\x26\xa1\xd3\x82\x55\x95\x53\xe8\x94\xde\xdc\x5c\x01\x6d\xa0\x31\xe4\x14\x56\x55\x66\xc5\x09\xd0\x91\xe2\xf3\x48\x74\x3a\x21\xcd\xfe\x75\xf2\xcf\x13\x5a\x34\xd7\x57\x67\x90\x12\x68\xf6\x34\x6a\xb6\x23\x6b\xa4\x4d\xde\x09\x18\x34\x9a\xb1\x47\x03\x52\x81\xf1\x1c\x05\x95\x30\x9c\x3a\xda\x03\x98\x07\x63\xb1\xcf\x81\xc9\x0a\xf0\x7e\x40\x6e\x0d\x8c\x86\x5c\x6b\x95\x43\x1a\xb4\x5a\x89\x0a\x7d\x34\x5d\xe4\x0f\x14\xcb\x1d\x66\x48\x39\xaf\x6d\xa0\x90\x52\xfa\x69\xac\x3b\xe4\xd4\x6f\x85\x74\x70\x04\x43\x56\x2d\x85\x64\xfa\xc1\xa9\x75\xfe\xf7\xdb\x14\x91\xd0\x18\xcd\xcc\x6d\xbe\x99\x22\xe3\x9c\xe1\x7c\x64\x1c\x12\x5d\x5d\x31\x2d\xd4\x68\x76\x57\x1d\xf3\xe9\x91\x5b\xa5\x0d\x2c\x95\x6d\xc3\x93\xa0\x55\xc6\xce\x5c\x78\x77\xc4\x11\xc7\xd1\x66\x03\x9a\xc9\x06\xe1\xbb\x1e\x6d\x9b\xc3\x77\x4c\x37\x8e\x1a\x8b\x33\x07\xf7\x4e\x37\xa6\xf8\x15\x6d\x4b\x0b\xd8\x6e\xe3\x28\xaa\xcd\x66\xe3\xa4\xb7\x5b\x12\x74\x01\xbb\xc0\xf5\xcf\x1d\x6b\x88\x8e\x93\xcd\xe6\x46\xfd\xa2\xd6\xa8\x21\x48\x25\xb9\x17\xa2\x2a\xba\x94\x8e\x1c\x33\xd2\x8c\xb2\xa2\x21\x60\xca\xaa\xcd\x66\x5f\xe9\xbb\xae\x23\x48\x43\x3a\x29\xa0\x0e\xe2\xa3\xa1\x71\x61\xee\x2a\xc6\xb7\x92\x88\xe8\xe8\xe7\x40\x47\xca\x14\x0b\x5b\xa1\xd6\x39\x24\x5e\x54\xd5\x70\x64\x66\xbf\xcb\x24\xa7\x3a\x26\xe0\xdb\x13\xa2\x47\x0f\x77\x45\xd7\xce\xb1\x66\x63\x67\x4d\x9a\x7d\x03\xed\x77\x99\x7c\xeb\x78\x31\x2e\xb9\xea\x7b\x26\x2b\xa7\x2c\x73\xaf\xf9\x0b\x8e\x7d\xe3\x3c\xfb\x2c\x3c\xc0\x91\x71\x6f\x78\xc2\xb9\x5e\x17\xca\xca\x83\x6c\xa7\x66\x15\xde\x9b\xc1\x8f\xf0\x83\xf7\xd4\xe4\x41\xf7\xd4\x40\xb5\xa7\x74\x27\xb8\xd7\x4d\x04\x69\x76\x10\x93\x37\x50\x1e\xc7\x71\xe4\x0a\xea\xf2\xf2\xfc\x72\x06\x97\x44\x8c\x7e\x72\x82\xd3\xe2\xdf\x3e\x7f\xa9\x77\xb3\x4e\x30\x83\x06\xb8\xea\x11\xd4\x68\x0b\x7f\xed\xe3\x50\xd1\xfc\xe7\x3f\x86\x65\xf1\xe4\x9c\xe0\x06\x2a\x12\x58\x32\xfe\x19\xac\x7a\x41\x1c\x35\xd9\x74\x5c\x3a\xbf\xed\x2a\xfa\xdb\xd8\xa8\x3d\xcb\xb8\x19\xc1\xe7\x94\xa8\xe1\x78\xe2\xb2\x57\x73\x48\x12\xe7\xa8\x80\x97\x93\x28\xcc\xe1\x71\x0e\xa3\x3c\x4f\xa7\x1b\xf9\xfe\xc9\x99\xbd\xff\x44\xed\xde\xdc\xa8\x05\xf5\xdc\x40\xbe\xd4\x71\xa9\x71\x03\x76\xc6\x75\x93\xe3\x89\xf1\x1e\xf5\x71\x25\xa5\x57\x36\x9b\x83\xe3\xbc\x73\xc1\xba\x74\x12\xcd\xfd\xe6\x6f\xc2\xb6\x1f\xa4\x41\x3e\x6a\x4c\xb3\xbd\xcd\x1b\xd1\xa3\x1a\x6d\x4a\x93\x6f\xb1\x40\xae\x64\x45\x4a\xe9\x79\x04\xfa\x6a\x4e\xbd\xde\x69\x7a\x36\xc3\x5c\x55\xc2\xba\x15\x1d\x31\x1c\x73\x0d\x95\xf0\x89\x4e\x24\xba\xee\x34\x03\xd7\xec\x51\x53\xf5\xee\xa7\x0f\xe5\x5c\xe4\x9a\x9c\x93\x2e\xce\x3a\x65\x7c\x8a\x7d\xe5\xc8\xc7\x09\xd8\x39\xd2\x3f\x7b\x6f\xf3\x4f\xf9\xf0\x5b\x35\xef\x42\x3b\x23\x92\xd7\xd8\x2b\x8b\x13\x4b\x9b\x01\xb9\xa8\x05\x56\xa1\x38\xf7\x73\xff\x09\x37\xbd\x80\x7f\xb4\x72\xc5\x18\x3c\x71\x58\x47\xa1\xf8\x5c\x39\x51\xf9\xa5\x19\x15\xe0\xe9\x04\x7b\x15\x06\xa7\x0b\x05\xaf\xa9\x82\x55\xf5\x9a\xba\x7b\x60\x8f\x5d\xa7\xa9\xde\xba\x11\x48\xc8\xa6\x48\xb2\x97\x4a\x97\xdb\x7b\x4a\x9c\xf0\xd7\x4d\xf1\x13\xe3\x9f\x1b\xad\x46\x59\x91\x6c\xad\x34\x08\x3a\x3e\x79\x0b\x02\x7e\x74\xc6\x05\xbf\x66\xb4\xf3\xfd\x3c\xb0\x03\xa1\x3c\x82\x50\x5a\xb9\x58\xa4\xdc\xde\xe7\xbb\x51\xe3\x56\xdc\xed\xad\xbf\x77\x83\x26\x59\x60\xd6\xc2\xf2\x16\xf6\x1e\x7d\x7b\x72\x47\xa8\x7f\x85\x04\x5d\x29\x73\x66\xf0\x29\x96\x9b\xb9\xe4\x7d\xec\x3c\x81\xaa\xf6\x35\x9e\xce\xee\xa8\xa6\x89\xb3\x9c\x9e\xe2\x57\xa6\x4d\xcb\xa6\x2e\xe2\x93\xf6\xcb\x88\xc6\x4e\xc5\xb6\xfb\xf3\xac\x98\x80\xd3\xdd\xed\x33\xd6\x75\xde\x2c\x97\xee\x4f\xd4\xd2\x0b\xc5\xb4\x9b\x4b\xff\xa8\xe3\xeb\x0c\x3a\x28\xa6\xc8\x5b\xba\x9a\x6c\xdc\xcd\x16\x8f\x26\xba\x90\x84\xa7\xfc\x4d\xe3\xfe\x00\xfe\x92\x6d\xd1\x5e\x1a\x77\x32\x4d\x7c\x20\xe1\xda\x5b\x83\x15\xac\x85\x6d\x67\x2e\x69\x0f\x04\x9f\x71\xeb\x01\x96\x27\x76\xb8\x46\x33\x28\x59\x3d\x8f\xb5\xda\x1b\x1f\x88\x78\xa8\x7d\xcf\x5e\xaa\x92\xf0\x75\x12\x6f\xe3\xff\x07\x00\x00\xff\xff\x69\x24\x32\x35\x09\x11\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 4361, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x83\x40\x0c\x86\x67\xfc\x14\xbf\x98\x60\xe8\xdd\xde\x35\xe9\x90\xa5\x89\xd2\xb4\xfb\x05\x0c\x58\x25\x47\xe4\x3b\x88\x22\x74\xef\x5e\x41\xaa\x2a\x5b\x27\xdb\xfa\x3f\xe9\xb3\x6d\x2d\x36\x43\xcd\x68\xd9\xb3\xba\xc8\x35\xce\x77\x44\x1d\x43\x30\xd8\xee\xf1\xbe\x3f\xe1\x6d\xbb\x3b\x19\xb2\x16\x47\xd6\xd1\x7b\xf1\xed\x03\xc0\x4d\xfa\x1e\xc3\xc4\x7a\x53\x89\x8c\xd8\x49\x40\x23\x3d\xaf\xf0\x17\x6b\x90\xc1\xbf\x62\x9e\xcd\x6f\x9f\xd2\x53\x80\xad\x8b\xfc\x9c\x2e\x73\x4a\x44\x57\x57\x7d\xbb\x96\x71\x71\xe2\x89\xe4\x72\x1d\x34\xa2\xa0\x2c\x6f\x7a\xd7\xe6\x44\x99\xb5\x38\x2d\xaa\x0f\xd6\x49\x2a\xa6\x2c\x9f\x67\xb3\x5b\xb9\x83\x8b\x1d\x5e\x52\x82\x0d\x53\x65\x03\xeb\xc4\x9a\xff\x07\xd8\xaa\x97\x9c\x4a\xa2\x66\xf4\xd5\xaa\x2d\x4a\xcc\xab\xe7\xf3\x5a\xbb\xc8\x70\x75\xad\x1c\x02\x07\x48\x83\xd8\xf1\x1d\x9d\x9b\x18\x67\x66\xff\x77\x7f\x64\xbf\xbc\x6e\x59\x32\x50\xb6\x14\x73\x70\x1a\xb8\x28\x89\xb2\x87\xc8\x1c\x47\x5f\x54\xbd\x98\xcd\xe0\x1b\x69\x4b\x4a\xf4\x13\x00\x00\xff\xff\x83\x6a\xf2\x2b\x7f\x01\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 383, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd6\x53\x10\x85\x51\xc4\x43\x2b\xdf\x03\xec\xd0\x36\x5d\x91\xc3\xda\x22\x0b\x76\x57\x62\xc6\x16\x66\x53\x9e\x44\x37\x2b\x04\xbd\xfb\x20\x45\x4d\xd2\x5d\xb2\x8b\x4d\xf1\xff\xf4\x8b\x22\x55\xd7\xf0\x60\x1a\x84\x16\x09\xad\x62\x6c\x60\xf3\x0e\x6c\x27\xe7\x24\x2c\x5e\xe0\xf9\x65\x0d\x8f\x8b\xe5\x5a\x8a\xba\x86\x15\xda\x89\x48\x53\x7b\x00\x60\xaf\xfb\x1e\xcc\x1b\xda\xbd\xd5\x8c\xc0\x9d\x76\xb0\xd3\x3d\x26\xf8\x27\x5a\xa7\x0d\xcd\xc1\x7b\x99\xe3\x10\xce\x04\x58\x28\xc6\x73\x35\xae\x43\x10\x62\x54\xdb\x5f\xaa\x45\xe8\x14\x35\x3d\x5a\x27\x84\x1e\x46\x63\x19\x66\xa2\x18\x37\x70\xe5\x7d\x29\x5f\xef\x97\x29\xf7\xaa\xb8\x83\xdb\x10\xae\x44\x25\x84\xf7\xb0\xd7\xdc\x41\xc9\x08\xf3\xaf\x20\x43\x10\x85\xf7\x56\x51\x8b\x50\xea\x98\x2a\x19\xe5\x0f\xb4\x6f\x7a\x8b\xf2\x3b\x72\x67\x1a\x17\xa1\xba\x06\xef\x4b\x2d\x9f\xd5\x80\x21\x80\x1e\xc6\x1e\x07\x24\x76\xf0\x01\x8b\x62\x37\xd1\xf6\x9c\x9a\x79\x9f\x0e\xd3\xd4\xe0\x9f\x64\xfc\xd0\x6b\x24\xbe\xb3\xad\x4b\xde\x31\x80\x23\xee\xfd\x93\x89\x11\xc8\x6f\x13\x6d\x59\x1b\x8a\x7a\xcc\x23\x35\x21\x54\x30\xfb\x32\x6e\xe4\x91\x2a\xb5\x5c\xe1\xef\x09\x1d\xaf\xdf\x47\xcc\x1e\x37\x80\xd6\x1a\x5b\x79\x51\x14\xf6\xa0\xc6\x4b\x5d\xdc\x17\x79\xef\x6f\x73\x73\x06\xe4\x2e\x6e\xfb\xaf\xc2\x63\x6f\x45\x51\x9c\xda\x38\x2a\xab\x86\xd4\xca\xe8\x23\x13\x9b\x99\x74\x86\xde\x81\xa2\x06\x66\xe9\x43\x86\xf3\x0e\xb9\x74\xf7\xca\x61\x2c\xaa\xfa\x94\x5f\xe1\x88\xf1\xd5\x55\x9f\xd3\x8f\x34\x0d\x55\xb6\x2d\x4e\xb7\x3b\x88\x79\x4c\x73\xb8\xfe\x57\x79\x32\x77\xb6\x0d\xe1\xe6\x58\x0e\xf6\x0e\xe1\xa2\xcf\x65\x1b\x6a\x4e\x9d\x38\x2d\xb2\x94\xe2\x90\x86\xc2\x93\x25\xb8\xce\xc3\xb9\x01\xd2\xbd\x28\xd2\x2b\x3c\x60\x1f\xff\xbf\x01\x00\x00\xff\xff\x17\x17\xce\xeb\x75\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 885, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2c\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\x74\x0f\x45\x51\x30\xd4\x58\x26\x2c\x93\x2a\x49\x3b\x31\x04\xfd\xf7\xc5\x90\x94\x23\xa7\x8e\x9b\x43\x10\x8b\xf3\x38\x1f\xef\x0d\x39\x9c\x4e\x61\x6e\x2a\x84\x1a\x35\x5a\xe1\xb1\x82\x87\x3d\x78\xbb\x75\x8e\xc3\xcd\x67\xb8\xfd\x7c\x0f\xef\x6f\x3e\xde\x73\x36\x9d\xc2\x1d\xda\xad\xd6\x4a\xd7\x11\x00\x8f\xaa\x69\xc0\xec\xd0\x3e\x5a\xe5\x11\xfc\x4a\x39\x58\xaa\x06\x03\xf8\x2b\x5a\xa7\x8c\xbe\x86\xae\xe3\xe9\x77\xdf\x8f\x0c\x70\x23\x3c\x8e\xad\xf4\xdd\xf7\x8c\x20\x0b\x21\xd7\xa2\x46\xa8\x6d\x2b\xa1\xb5\x66\xa7\x2a\x74\x20\xa0\xbe\x5b\xcc\x41\x36\x0a\xb5\x87\xa5\xb1\xe0\x57\x48\x0e\xbe\xa0\xdd\x29\x89\xfc\x56\x6c\xb0\xef\xc1\xa5\x4f\xd6\x8e\xdc\x30\xa6\x36\xad\xb1\x1e\x72\x96\x4d\xa4\xd1\x1e\x9f\xfc\x84\x65\x93\xda\x98\xba\x41\x5e\x9b\x46\xe8\x9a\x1b\x5b\x4f\x09\xfd\xba\x65\xba\x41\x2f\x2a\xe1\x45\x80\x28\xbf\xda\x3e\x70\x69\x36\xd3\x76\x5d\x4f\xd1\x5a\x63\xdd\x84\x1d\x5b\x6a\x73\xb5\x56\x7e\x4a\x7f\xa8\xab\xd6\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xd4\x2b\xf8\x03\x20\x25\xc5\xb2\xe9\x14\xee\x89\xe6\x54\x32\xcb\x26\x5d\xc7\x3f\x86\xca\x16\xc2\xaf\xe0\xaa\xef\x61\xea\x76\x54\x40\xfb\x00\x64\x5c\xbc\x3b\x36\x4f\x58\x11\x38\xbe\xc5\x47\xb0\xe8\xb7\x56\x3b\x10\x7a\x20\x0d\x1e\x84\x5c\xc7\x26\x38\xa6\x5b\x1a\xad\x51\x7a\x65\x34\x87\x8f\x1e\x94\x23\xf2\xc9\x8f\x45\xd7\x1a\xed\xd4\x83\x6a\x94\xdf\x83\x59\x06\x55\xa4\x68\x1a\xb4\xe0\x0d\x54\x4a\x34\x25\x08\x5d\x41\x23\x3c\x5a\x90\x8d\x71\x58\x46\xd0\xb3\x4f\xb6\xdc\x6a\x49\x39\xe5\xb4\x08\x97\x54\x2f\x9f\x87\xd0\x73\xa3\x75\x09\xa6\x25\x9c\x03\xce\xd3\xf2\xe7\xb0\x50\x40\xde\x3e\xf0\xae\xfb\x60\x48\x7c\x78\xd1\x0a\xe9\xab\x84\xa0\x4c\x01\x1d\xcb\x76\xc2\x82\x94\xa9\xaa\xb9\xd1\x4b\x55\x33\x96\x51\x33\xfd\x28\x61\x09\xd7\x33\xb0\x42\xd7\x78\x88\xd7\xb1\x2c\x43\x6b\xc9\xb0\xcc\xff\x94\xb2\x60\x59\xa6\x96\xe4\x10\xfe\x98\x81\x56\x4d\x40\x64\x91\x49\xfa\x4e\xc1\x1c\xff\xcf\x8a\x36\x47\x6b\x4b\x98\x48\xa1\xb5\xf1\x20\xda\xb6\xd9\x27\xcf\x13\x72\xd4\xb3\xac\x67\x2c\x93\xa3\x82\x1c\x45\xfa\xf6\xfd\xa8\x3d\x8e\x2a\xa6\x70\xa7\xac\xef\x70\x69\x2c\xe6\x94\x4c\x6a\xef\xaf\xa2\xd9\xa2\xbb\x37\x1f\xee\x16\xf3\x4f\xa9\x6b\x73\x29\xf9\x0a\x45\x85\xd6\x15\x45\x49\xe1\xb3\xae\xbb\x82\x47\xe5\x57\x70\xe1\x91\x82\xf3\xbe\x67\xd9\x68\xb5\x5d\xd7\x81\xdb\xeb\x19\x21\x78\x3a\x9b\x91\x60\x8a\x46\xc8\xc8\xd9\x85\x1a\x40\x83\x0c\x9f\xd0\xaf\x4c\xe5\x22\x30\x70\xdf\x75\xf7\xe6\x5f\xf3\x88\x16\x2e\x54\x52\xe9\x7d\x3a\x15\x30\x1c\x0f\x3e\xac\x84\x5d\x81\x5f\x0a\xf3\xfa\xc6\x19\x1c\x33\x72\x8b\x8f\x91\x94\x3c\xee\x25\x46\x74\x99\x7e\x4f\xba\x6e\xa8\xa9\xef\x79\xd7\x8d\xf3\x8d\x8b\x93\x31\x54\xbd\x5c\x7c\xaf\xa5\xa9\x90\x48\x1d\x59\xef\xf0\xe7\x16\x9d\x1f\x30\x37\x78\x12\x13\x4e\x0a\x0e\xa0\x71\xe3\x5e\x28\x3e\x98\xef\xf7\xed\x90\x48\xd7\x0f\xd8\xa3\x16\xe1\x9c\xa7\xf5\xe2\x40\x55\x5e\x84\x95\xa4\x08\xea\x2a\xa9\x98\x7e\x0d\x3f\xd8\xd0\xa9\x6e\x27\x0f\x7b\x5d\x47\x80\xb1\x86\x2f\x05\xa4\x8b\x23\xb8\xfb\x85\xfb\x6b\x00\x38\x27\x6a\xf9\x1c\x3b\xeb\x4b\x3a\x20\x2c\xde\xf1\x44\x0e\x44\x95\x20\xd2\xc5\xce\xe7\x10\xa7\xc7\x59\x66\xe9\x5a\x12\x70\x7c\x6b\xf2\xb8\x63\x80\xfc\x4d\xf7\x8c\x5f\x89\x70\xa3\xed\xd0\x7a\x07\x82\xfc\x86\xbb\xee\x44\x1d\x60\x91\x0e\xad\x37\x20\x60\xeb\xd0\x5e\x55\x66\x23\x94\x7e\x05\x1a\x63\x70\x58\x58\xb5\x11\x56\x35\x7b\xda\xb3\xdc\x36\xa0\x34\x88\x74\xe9\xa4\xbb\xee\x6c\x21\xf9\x0f\x48\x87\x98\xcf\xe3\xff\x32\xb4\xf8\x5d\x48\x46\x69\x8f\x76\x29\x24\x76\x7d\x01\xf9\xe8\x6b\x7c\xd1\xc5\xbc\xaf\x67\xcf\xfb\x78\x7e\xf9\xfb\x96\x2b\x0e\x1d\x12\x1c\x0c\x8a\x1d\xfa\xe7\x85\x72\xf1\x30\xbc\x49\xb9\x73\xe7\xe6\xa4\x70\x71\x43\x42\xbc\xa6\xdb\xef\x35\x89\x01\x82\x80\x67\x44\x0e\xa8\x37\x09\x77\xae\x8e\x53\xba\x0d\x19\xbc\x51\xb5\x9f\x61\x06\xa5\x7c\x4e\x28\x16\x0c\xaf\x08\xf6\xf3\x17\xb9\x98\xdf\xb7\x78\x34\xed\xc0\x79\xbb\x95\x9e\x82\xa5\x41\x00\xdf\xbe\x3b\x6f\x95\xae\xd3\xc9\x1c\x4f\x9b\x28\x0c\xd5\x1d\xbe\x82\x00\x1b\x53\xa9\xa5\x42\x17\x67\xf8\xe1\x79\x40\x93\x34\x44\x3b\xda\x4f\x5b\xf3\xcb\x71\x02\x45\x2c\x97\x45\x36\xe7\xfe\x69\x98\x53\x5f\x50\x57\xf9\x1a\xf7\x61\xc8\xc7\x8c\x8a\x63\x67\xdd\xa1\xd6\xe0\xd6\xc0\x29\xc7\x61\x20\x9b\x61\xca\xc1\x0c\xc8\x25\x1b\x8f\x68\x1a\x7b\x7d\x8a\x7f\x6e\x56\x86\x5c\x06\x72\x0a\x38\x35\x75\xc7\xdd\xf9\x22\x3b\xe9\x9f\x7e\x6d\x86\x4d\x05\x97\xc3\x0b\x92\x7f\xba\x29\x5e\x22\x42\xf2\x34\x27\x5b\xa1\xc6\xca\x64\xc3\x13\x65\xfd\xfc\x44\x09\xe9\x85\xe9\xa8\x96\xb0\x2b\xc1\x04\x9b\xf4\x4f\x3c\x54\x93\xaf\x0b\x9e\xa7\xdc\xff\x22\x63\x1c\xa4\xd1\xf1\x8c\x1e\x23\xc4\x77\xf8\x2c\x61\x5d\xc2\x2e\x4c\x90\x3e\x3c\x4b\xe2\x23\x27\x42\xc7\xcf\x9c\xcb\x4d\x05\x33\x38\x14\xf0\x8f\x51\x3a\xbf\xdc\x54\xe5\xf3\xd2\x82\xf6\x44\xaf\x9c\xf3\xa2\x18\xdc\x25\x66\xa4\x7f\x8a\xec\xff\x1f\x00\x00\xff\xff\xf4\x64\x47\xda\x78\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3192, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcf\x6f\xdb\xb8\x12\x3e\x4b\x7f\xc5\xd4\xc8\x43\xec\x40\xa1\xf1\x8e\x2f\x45\x0e\xef\x35\x79\xbb\x01\xb6\x4d\xd1\xa4\xbb\x87\xa2\x28\x68\x69\x6c\x11\xa1\x48\x96\xa4\xec\x78\x05\xfd\xef\x8b\x21\x25\x59\xae\xd5\x1f\xbb\xc7\xc5\x1e\x82\xd8\xe4\xf0\xe3\xcc\x37\xdf\x0c\xc7\xcb\x25\xbc\xd2\x05\xc2\x06\x15\x5a\xee\xb1\x80\xd5\x1e\xbc\xad\x9d\x63\x70\x73\x0f\x6f\xee\x1f\xe1\xf6\xe6\xee\x91\xa5\xcb\x25\xbc\x43\x5b\x2b\x25\xd4\x26\x1a\xc0\x4e\x48\x09\x7a\x8b\x76\x67\x85\x47\xf0\xa5\x70\xb0\x16\x12\x83\xf1\xaf\x68\x9d\xd0\xea\x0a\x9a\x86\x75\x9f\xdb\x76\xb4\x01\x37\xdc\xe3\x78\x97\xbe\xb7\x6d\x9a\x1a\x9e\x3f\xf1\x0d\x82\xdb\xe6\x29\xd9\x3f\xf6\xb0\x90\x6b\xe5\xb9\x50\x0e\x2a\xf4\xa5\x2e\x1c\x78\x0d\x15\x7f\x42\x10\xaa\x10\x5b\x51\xd4\x5c\x02\xaa\xc2\x68\xa1\xbc\x83\xb5\xd5\x15\x38\xb4\x5b\x91\xa3\xcb\x08\xc9\xe2\xe7\x1a\x9d\x07\xae\x0a\xb0\xe8\x8c\x56\x0e\xc1\xef\x0d\x06\x24\x32\xa5\x20\xb4\xc3\x03\x4a\x06\xdc\xc1\x0e\xa5\xa4\xff\xa8\x72\x5d\xa0\x75\x04\x40\x78\x05\x76\xdf\xd7\xda\x76\x07\x03\x5a\x16\x16\x38\x91\xb3\x06\x5d\x5b\x70\xb5\x31\xda\x12\xb9\xde\x72\xe5\xe8\x33\x5d\x27\xb8\x14\xbf\x73\x2f\xb4\x22\xb4\xb5\xb6\x15\xf7\x8e\xa5\xa9\xa8\x82\xc5\x3c\x4d\x66\xeb\xca\xcf\xd2\x64\x46\x91\xe3\xb3\x9f\xa5\x69\x32\xdb\x08\x5f\xd6\x2b\x96\xeb\x6a\xb9\xd1\x97\x4f\xc2\x2f\xe9\xaf\xf7\x98\x4c\xcc\x0a\x66\x4d\xc3\xde\xfe\xef\x2e\x00\xbd\xe5\xbe\x84\xcb\xb6\x9d\xa5\x8b\x40\xe8\xed\x40\x51\xae\xa5\xc4\xdc\xbb\xde\x57\x5f\x8e\x42\x07\x5f\x72\x0f\xb9\xae\x0c\x05\xc6\x15\xf0\xa2\xe8\xf9\x64\x70\xe7\xcf\x1d\x81\x55\xc8\x95\x27\xfa\x56\x08\xb5\xc3\x82\x78\xe2\x50\xa2\x34\x68\xc1\x79\x5b\xe7\x3e\xa3\xed\xee\xaa\xe9\x9b\x84\xf2\x1a\x38\xc1\x39\xa1\x36\x12\xc1\x70\xcb\x2b\xf4\x68\x49\x4a\xb4\x7e\xa7\x80\xc7\x0c\xd9\x0c\x84\x3f\x77\x74\xd9\xba\x96\x81\xe9\x75\xad\x72\x62\xb1\x73\x59\x21\x11\xad\x41\x9b\xa0\x68\xd0\x74\xd6\xa0\xbd\xec\x2f\x24\xc0\x15\x77\xc2\x31\xf8\xbf\xb6\x80\xcf\xbc\x32\x12\x33\xd8\xeb\x1a\x2a\xb1\x29\x3d\x18\xee\x28\xcb\x23\xaa\xc8\xc1\xe1\xa2\x78\x8f\xb1\xba\xa8\x73\x0c\x34\x70\x05\xa5\xf7\x86\xfd\xcc\x55\x21\xc9\xc7\x9d\xf0\x25\x20\xcf\xcb\x4e\xac\x30\xef\x6f\x5f\xc0\x4e\x58\x2c\xa0\x36\x11\xd4\x19\xcc\xc5\x5a\xe4\x60\xb8\x2f\x19\xcc\xef\x82\x7f\xc2\x11\xfe\x8a\xaf\xe4\x1e\x38\x54\xc2\xf9\x28\x74\x28\xd0\x89\x8d\xa2\xa3\x42\x6d\xf5\x13\x06\x2a\x1f\x62\x5a\x86\xc2\x08\x2e\xe2\x71\xb2\x63\x32\x08\xa2\x67\x92\x2d\xc6\xec\xe6\x52\xa0\xf2\xc7\xec\x8e\x12\x77\xa8\x31\xb9\xa7\x4a\x8c\x70\x58\x7c\x2b\x8d\x54\x0d\x91\x2b\x41\x0c\x57\x18\x65\x75\xf0\x57\x28\x8f\x76\xcd\x49\x50\xd3\x99\x20\xb0\xe1\xb2\xe9\x3a\xaf\x5d\xec\x48\x5d\x61\x2d\x43\x1e\xde\xe0\xee\x55\x17\x4f\xae\xab\x95\x50\x81\xa7\xaa\x73\x71\x94\xd8\xac\xeb\x06\xbe\xb6\x0a\x44\x50\x32\x39\x98\x73\x29\xd1\x46\x31\x77\xce\xb2\x34\x84\x73\x42\x68\x93\x36\x8d\xe5\x6a\x83\x70\x26\xe0\xea\x1a\x58\x6f\xff\x3a\x26\xa3\x6d\xd3\xa4\x69\xce\x04\x7b\xc3\x2b\x6c\xdb\xfe\x3c\x00\x0c\x41\xb0\x7e\x31\x6d\x9a\x4b\x5a\x6d\xdb\xb4\x3d\xae\xd5\x1f\xb8\x84\xd4\x09\xf3\x91\x87\x0b\x18\xdd\x3b\xcf\xfd\x33\x74\x7d\x84\xbd\x8a\xff\x33\x52\xc3\x85\x59\xb1\xa6\xf9\x49\x93\x19\x9c\x09\xf6\x2e\x76\xc9\xc7\xbd\xc1\xee\xe8\x02\xe6\xa7\x46\xb1\x7d\x8e\xac\x32\x40\x6b\xb5\x5d\x40\x93\x26\x49\xdf\x5e\xc3\x22\x39\x8c\x6c\x82\x03\xf2\x89\x7c\x58\xa4\x49\x22\xd6\xc1\xf4\xc5\x35\x28\x21\x03\x46\xd2\x65\x45\x09\x19\x60\xd2\x24\x69\xd3\x61\xb5\xbf\x81\xfd\x88\x6f\x8b\x8c\x50\xd2\xa4\x4d\x9b\x26\xd2\x4b\xe4\xbe\xa6\x92\x1a\x33\x1c\x8a\xf6\xcc\x63\x60\x38\xe6\x6d\x4c\xfa\x99\xc7\x29\xde\x13\x4a\xda\xf2\x22\x4d\x93\x84\x9e\xab\xfb\xfb\x9b\xfb\x2b\xb8\x57\x39\xc2\x46\x4b\xae\x36\xf0\x6f\xf6\x9f\xa0\xb2\xa0\x1f\x2e\x05\x77\x48\xbd\xb7\x42\xd0\xb5\x67\xf1\xd8\x7b\x53\xd0\x7b\x18\xbf\x84\x80\x86\xab\x62\x08\xdd\xb7\x68\xb0\xe2\xf9\x13\x78\xfd\x1d\x73\xb4\xe4\xd3\xc5\x32\x38\x19\xd4\x41\x11\x4f\xe5\xc1\x45\x8c\x71\x80\x47\xb7\x2e\x4e\xa5\x7a\x94\x22\x02\x9f\x16\x58\xff\xe6\x0e\x95\xde\x90\x9c\x86\xd7\x77\xb4\x1c\xa5\x32\xd2\x10\xa1\x7f\x26\xde\x3b\x8c\xa9\x4c\x9f\x48\x35\x9c\xdb\x0e\xb2\x73\xec\x8b\x12\x08\x1e\x45\xab\x09\xc5\x4d\x69\x2e\xaa\x6e\xd8\xd9\x76\x52\x8a\xcb\x41\x23\x51\x51\x63\x65\xfd\x66\xb9\xf9\xaf\x94\xb7\xcf\x39\x1a\x0f\x3b\xcb\x8d\x8b\x8f\xc1\xc0\xde\x5a\xa0\x2c\xe8\x25\xec\xba\xc8\xa1\xad\x04\x11\x86\x2e\x3a\xf1\xbc\xb3\xd7\xa2\x28\x24\xee\xb8\x8d\x53\xd6\x7b\xd7\xcf\x5d\x34\x71\x18\x23\xf7\xd4\x0c\xa9\xc1\x7b\x02\xaf\x06\xeb\xf0\x82\xe1\x16\xed\x7e\x48\x25\x15\x3f\xf5\xba\xfe\x4d\x27\xbc\x7b\x43\xef\x1b\xf5\xf8\x6c\xd4\x62\x73\xae\xe8\x7d\xa7\x57\x11\x0b\x3a\xb6\xda\x83\xa2\x1c\xc4\x77\x1f\x9f\x73\x59\x17\x58\xc4\x91\x6b\x85\xe4\x02\xc5\x6c\xb0\x60\x27\x6c\xcc\x0f\x3e\x65\x30\x7b\xf0\xdc\xd7\x6e\x96\xc1\xec\xad\x50\x9b\xd9\x22\xed\x9b\xd8\xc5\xa8\x8b\x7d\xed\x3c\x4c\xb0\x92\x1d\xbc\x61\x8c\x39\x6f\x85\xda\x04\x39\x09\xd5\x2d\x5f\x5d\x43\xc5\xcd\x87\xb8\xf5\x31\xd2\xdf\xb4\x4d\x57\xc7\xdf\x6b\xb2\x49\x32\x1b\x29\x6a\x76\x05\x03\x40\x9b\x75\x10\x51\x06\x49\x9b\xa6\x09\x65\xe5\x13\xb9\x14\x64\x1c\xa0\x07\xf7\x9a\xd8\xf4\x3e\x65\xa0\x9f\x68\xbb\x77\xf0\x03\x3e\x7f\x7c\x09\x2f\xf4\x53\x94\xa4\xe1\x4a\xe4\xf3\x75\xe5\xd9\x83\xb1\x42\xf9\xf5\x7c\x76\xdb\x43\x0c\x99\x3c\xff\x97\x3b\x87\x42\xa3\x03\xa5\x3d\xe0\xb3\x70\xfe\x25\x38\xc4\xb1\x00\x06\x0d\x39\xb6\xd1\x33\x72\x6a\xb1\xe8\x5a\x6a\x81\x12\x3d\xce\x7b\x0f\xc2\xde\x21\x00\xa1\xf2\x0c\x3e\x1d\x22\x18\x98\xfc\x71\xce\xc4\x9a\x4e\xc1\xf5\x35\x1c\xb1\xd7\x15\xdd\xe4\xdb\x00\xd7\x23\xe7\xe7\x93\x26\x8b\xbe\x0a\x8f\x58\x8f\x15\xf8\x0b\x5f\xa1\xc4\xe2\x20\x8c\xf8\x6b\x65\x83\xbe\x97\xf1\x78\x04\x8d\x6a\xde\x95\xa8\x86\x5d\x3d\x52\x6e\x07\x16\x05\x98\xc5\x82\xeb\x6a\xa2\x8e\xc6\x10\x7f\x02\xf1\xf8\x3b\x4a\xe4\x34\x89\x59\x91\xc7\x11\x79\xe4\x43\x29\xf2\x32\x1c\x75\xa8\xa6\x5c\xe8\xc6\x8f\xee\x74\x3f\x7c\x69\xdb\x0d\x1f\xa7\x51\x85\xce\x1b\xb5\x9c\x9d\x36\xe9\x89\xbe\x9d\x7e\x2d\xae\xbf\xdc\xa6\x4e\x9c\xca\xba\x38\x03\xe3\x16\x73\x14\xdb\x38\xa6\x86\x10\xbf\x98\xfe\x19\x3c\x20\x0e\x30\x23\x94\xb0\xd1\x4f\xcf\x43\x0b\x20\x47\x49\x94\x05\x7a\x2e\x64\x98\x74\xfb\x8a\x0a\x3f\xa2\xba\x09\x9d\x4b\xe1\xf7\xec\x5b\xdd\xe4\x28\xf6\x71\x53\xf9\xd3\x8c\xfe\xd3\x72\xfe\x96\x2d\xe7\xe8\x58\x36\x3d\xc0\x7e\xad\x03\xfd\x11\x00\x00\xff\xff\xb3\x40\x6b\xeb\x56\x11\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4438, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x6e\xdb\x3a\x10\x85\xd7\xe2\x53\xcc\x25\x70\x0b\x09\x70\xa9\x2c\x9a\x2e\x5c\x78\x91\x46\x6e\x9a\x4d\x2c\x38\x8e\xb7\x05\x2d\x8d\xe4\x41\x65\x52\x20\x69\x05\xa9\xa1\x77\x2f\x48\x59\x85\x5a\xa7\x48\x57\x1a\x62\xce\x7c\xf3\x73\x94\xa6\x70\xab\x4b\x84\x1a\x15\x1a\xe9\xb0\x84\xdd\x0b\x38\x73\xb4\x56\x40\xb6\x82\x87\xd5\x06\x96\xd9\xfd\x46\xb0\x34\x85\x35\x9a\xa3\x52\xa4\xea\x41\x00\xcf\xd4\x34\xa0\x3b\x34\xcf\x86\x1c\x82\xdb\x93\x85\x8a\x1a\x0c\xe2\x2d\x1a\x4b\x5a\xcd\xe1\x74\x12\xe7\xb8\xef\x27\x09\xc8\xa4\xc3\x69\xd6\xbf\xfb\x9e\xb1\x56\x16\xdf\x65\x8d\x50\x34\xc4\x18\x1d\x5a\x6d\x1c\xc4\x2c\xe2\xd5\xc1\x71\xff\x69\x64\xed\xbf\xda\x72\xc6\x22\x7e\x3a\x89\xfb\xa0\xc9\xa5\xdb\xc3\xfb\xbe\x87\xd4\x76\x45\x6a\xd1\x74\x68\x38\x4b\x18\x0b\x1b\xaa\x8a\xea\x61\xde\x1d\x42\xab\xdb\x63\x33\xee\xba\x7c\xd8\x42\x27\x8d\x05\xad\x80\x14\x39\x6a\xe8\x87\x74\xa4\x95\x2f\xf4\xcd\x2e\xf6\xfc\x55\x41\x6a\x24\x6b\x15\xa4\x22\x97\xc6\x62\x9c\xb0\x4e\x9a\x31\x35\x4c\x22\x86\x17\x63\xd5\x51\x15\xa1\x4f\x9c\xc0\x89\x45\xa1\xea\xd1\x19\x52\xf5\x56\x9a\xf8\xdd\x20\x13\x19\xee\x8e\xf5\x4d\x59\x9a\x19\xf0\xd2\xc7\x42\x96\xa5\xe1\x33\xe0\xf3\xeb\xab\x8f\x57\x3e\x08\x12\x90\xaa\x84\x03\x3a\x43\x85\x85\x86\xac\x43\x05\x5e\x89\xd6\xf2\xe4\xaf\xf4\xaf\x9b\x4d\x7e\x86\xef\x9d\x6b\xa7\xec\xeb\xc0\xf6\x82\x7f\xc7\xdd\xad\xf3\xdb\x33\xae\x36\x6d\x31\xc5\x7d\x08\xb8\x7a\x9d\xdf\x42\xec\xa1\xc9\x25\x95\x45\x69\x0a\x4f\x16\x01\x55\x47\x46\xab\x03\x2a\xe7\xcf\x4b\x72\xd7\xa0\x9d\x01\x55\x60\xd1\x09\xf8\x12\xac\xd8\xcb\x0e\xa1\x35\xa4\x0d\xb9\x97\xe0\x09\x2c\x55\x17\xec\x10\x2c\xa2\x2a\x80\x61\xbe\x00\x6d\xc5\x1d\x3a\x54\x5d\xcc\xb3\xe5\xe7\xa7\xbb\x6f\x37\x59\xb6\xe6\xc9\xa7\x41\xf0\xdf\x02\x38\xf7\xf7\x8f\xfe\x3c\x38\x2c\x82\x82\x45\x7d\xc0\x85\xbf\xef\x77\x5c\xbe\x5a\x6f\x3c\x28\xa4\x2e\x40\xe3\x6d\x61\x01\xd5\xc1\x89\xc7\xd6\x90\x72\x55\xcc\xe7\xff\x5b\x3e\x0b\x35\xc9\xc8\x7e\x65\x54\x5f\xfd\xc6\xa4\x93\x06\xd3\x41\x5f\x81\x79\x5f\xde\x80\x8d\xd6\x4d\x60\x3d\xfb\x19\x00\x00\xff\xff\xe0\x4d\x14\x8b\x13\x04\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 1043, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x2a\xf4\x20\x17\x8e\x84\x17\xef\x69\x83\xe6\xd0\x26\xdd\x6d\x80\x26\x31\x5c\xef\xee\x99\x26\xc7\x34\x11\x99\xd4\x92\x94\xed\x40\xd0\x7f\x5f\x0c\xf5\x61\xb9\x6d\xbc\xdb\xbd\x24\x22\x67\xf8\xf0\x99\x67\x3e\xe8\xa2\x80\x5b\x2b\x11\x14\x1a\x74\x3c\xa0\x84\xf5\x0b\x04\x57\x7b\x9f\xc3\xdd\x13\x3c\x3e\xad\xe0\xd3\xdd\xfd\x2a\x67\x45\x01\x4b\x74\xb5\x31\xda\xa8\xce\x01\x0e\xba\x2c\xc1\xee\xd1\x1d\x9c\x0e\x08\x61\xab\x3d\x6c\x74\x89\xd1\xf9\x0f\x74\x5e\x5b\x73\x0d\x4d\x93\xf7\xdf\x6d\x3b\x31\xc0\x1d\x0f\x38\xb5\xd2\xba\x6d\x19\xab\xb8\x78\xe6\x0a\xc1\xa3\xdb\xa3\x63\x4c\xef\x2a\xeb\x02\x64\x2c\x49\x4b\xab\x52\x96\xa4\x06\x43\xff\xaf\xd8\x86\x50\x4d\xbf\x8b\xaa\x72\x76\x93\x32\x96\x14\x05\xfc\x5f\xc2\x82\xbb\xf0\xc2\x92\x54\xd9\x92\x1b\x95\x5b\xa7\x8a\x63\x41\xce\xc2\x9a\x80\xc7\x88\xa3\xac\x55\x25\xe6\x13\x17\xe5\x2a\xd1\x63\xac\x28\xa8\xaf\xe8\xf6\x5a\x20\x4b\xaa\x35\xa4\x4d\x93\x2f\x3e\xde\x47\x52\x0b\x1e\xb6\x70\xd5\xb6\x84\xd2\x34\xf9\xf9\x26\x14\x7e\x2f\x5e\xb1\x6c\xb9\x91\x25\x3a\x9f\xb2\x19\x63\x31\x05\x66\xa3\x15\x10\x29\xae\x8d\x87\xb0\x45\x70\xf8\x57\xad\x1d\x4a\xd8\x68\x2c\xa5\x87\x8d\x75\x30\xe8\xcf\x07\x75\xc2\x4b\x85\xc3\x69\x1f\x5c\x2d\x02\x34\x2c\xf9\xbc\x5a\x2d\x3e\x48\xe9\x68\x4b\x1b\xc5\x92\x3b\x5c\xd7\xea\x6c\xe7\xb7\xe5\xe2\x76\xba\xd1\x32\xb6\xa9\x8d\x80\x47\x3c\x7c\x32\xb2\xb2\xda\x04\x9f\xcd\xc0\xef\x45\x3e\xae\x09\xba\x28\xe0\x63\xed\xb5\x41\xef\x41\xda\x1d\xd7\x26\x67\x49\xd3\x5c\x41\xf1\xae\x17\xec\xe9\xe9\xee\xe9\x1a\x9e\x8c\x40\xe8\x24\x85\xff\xe5\xbf\x00\x37\x12\x22\x59\x5e\x6a\xee\xd1\x83\xb0\x3b\x04\x5b\x87\x3c\x9e\xfa\xbd\x92\x54\x0e\xf1\xbb\x5a\xe7\x4d\x93\xf7\x9a\xe7\x8f\x7c\x87\x6d\x3b\x66\xa0\x28\x60\xcd\xc5\x33\x04\x7b\xd9\x99\x2a\x27\x79\x57\xb4\x2d\x4b\xf6\xdc\x45\xb9\xb4\xc0\xcb\xd8\x0d\x4b\x92\xc1\xf1\x06\x86\x1c\xe5\x8f\x78\xe8\x5d\xb2\x19\x4b\xe8\xd2\x3f\x1d\xaf\x86\xa2\x80\x83\x0e\x5b\xd8\x69\x29\x4b\x3c\x70\x87\x3e\x87\xaf\x88\xe3\xe9\x62\x6a\x51\xf6\xc7\x37\x10\xde\x70\x45\x6f\x9e\xb1\xa4\xed\x04\x1d\xe4\x3f\xc9\x4d\x01\x65\xa4\xba\xe3\x46\x21\xbc\xd5\x70\x7d\x03\x63\x50\x0f\x18\xb6\x56\x7a\x2a\x34\x96\x24\x4d\xb3\xb2\x5f\xec\x01\x1d\xbc\xd5\x7d\xbc\x23\xe0\x4d\x4c\xef\x03\x7f\xc6\xa6\xf9\xce\x3a\x21\xd2\x34\x68\x24\xa1\xcd\x18\x4b\x70\xac\x86\xeb\x9b\xf3\xf2\x68\xfe\x35\xa5\xef\x2e\xbb\x06\x00\xb8\x40\x75\x3e\x21\xd1\xcb\x12\x73\xe0\xb1\x44\x41\x43\xeb\x54\xa3\x3f\x99\x8e\x53\x38\xdf\xe4\xe3\xd4\x05\xa3\x0b\x85\xef\x30\xd4\xce\xc0\xb8\x47\x8d\x43\xa3\xb1\x36\xe0\x03\x77\xc1\x03\x07\x83\x07\xa0\x61\xd4\x37\xe9\x1c\xd4\x72\x71\x3b\x2e\xa8\x13\x38\x48\xea\xc8\x7e\xaf\xe3\x1c\xb6\x48\x48\x15\xf7\x1e\x25\x8d\x02\xea\x69\x72\x2e\xad\x52\xe8\xba\xf6\x5c\xd6\x26\x13\x1b\xd5\xb7\xfc\x8c\x3a\xf2\x2c\x21\xe7\xed\xdb\x29\xf5\x80\x62\xcb\x8d\x16\xbc\x3c\x95\x10\x3a\x27\xc8\x7f\xc7\x9f\x31\x23\x33\xa0\x73\xd6\xcd\x58\x22\xc2\x91\x0c\xfd\x7c\xcc\x3f\x72\xf1\xac\x9c\xad\x8d\x1c\xe0\xee\x4d\x40\xe7\xea\x2a\x0c\x7a\xe5\x2c\x51\xf6\x24\xde\x68\xff\xdc\xed\x64\x74\x57\x7f\x36\xce\x21\x28\xb5\x0f\xf4\xdc\x74\x07\x29\xae\x2c\x46\x92\x94\x56\xe5\x0b\xa7\x4d\x28\x4d\x96\x06\xc7\x8d\xa7\xb1\x99\xce\x21\x8d\x72\xd1\x07\x97\xd2\xa5\x73\x10\x1b\x95\x8f\x43\x8d\xc0\x93\x1d\xb1\x26\xd5\x87\x7e\xc5\x87\xfa\x18\x1b\x76\x97\x77\x4c\xb2\xb4\x88\x30\xdd\x1b\x51\xa4\xf3\xce\xbd\xa7\xf9\x2b\xd1\x88\x96\xfc\xde\x48\x3c\xce\x2e\x1c\x15\x3b\x59\x6a\x83\xaf\x23\xdc\x76\x0e\x97\x30\xe8\x8f\x2e\x2f\x60\x2c\x3a\x87\x4b\x18\xfe\x65\xb7\xb6\xe5\xeb\x10\x5f\xa3\xfd\x12\x42\x70\x5c\x5c\xe0\xb0\x22\xf3\x2c\xea\x1b\x2b\xe6\xfd\x55\xe7\xf9\x25\x66\xf0\x83\x91\x51\xe8\xec\x2c\x1b\x73\xd8\xd1\xf0\x1a\xca\x85\xde\x22\x18\x73\xf9\x13\x29\xa7\x83\xdf\x64\x7c\x78\xd7\x28\xa0\xed\x30\x7f\x68\x7e\x91\x61\x28\x37\x11\x8e\x73\x98\xf4\xec\x3f\x53\x1f\x60\xe7\xb0\x9d\x32\x8f\x5d\xfb\x5f\x98\xd3\xc1\x74\x3e\x25\x3e\xbc\xb6\xc4\xa6\x34\x73\x6a\x36\xa2\x6f\x30\xf4\x7c\xb2\x34\x88\xea\x07\xce\x7a\x13\x7d\xdf\xdc\x80\xd1\x65\xbc\x76\x8c\x06\x9d\xa3\x65\x37\x90\x58\x12\xe7\x62\xe2\xdd\x7e\xaa\x0b\x41\x75\xaf\xe1\x0f\x64\x89\x03\x83\x7e\xea\x8c\x1d\xe3\x62\xbf\x54\xeb\x7c\x89\x8a\x68\xb9\x57\x9e\xd6\xcc\xcf\xc1\xbb\xfd\x59\x5d\xf8\xbc\x13\xb4\x34\x53\x0d\x97\xb5\x79\xc3\xce\xa5\xc2\xa3\x26\x95\xde\x5f\x75\x73\xa1\x65\xec\xef\x00\x00\x00\xff\xff\xb5\xcd\x35\xae\x84\x0a\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2692, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x28\x16\x76\xe1\x50\x7b\x0e\x90\x4b\x93\x6e\x1b\xec\xe6\x03\x59\xa3\x7b\x28\x8a\x82\x96\xc6\x12\x61\x8a\x54\x48\xda\x89\x97\xd0\x7f\x5f\x0c\x25\xd9\x4a\xec\xda\x3e\x04\xb1\xc4\x37\x33\x8f\xef\x0d\x47\x4c\x53\xb8\x36\x39\x42\x81\x1a\xad\xf0\x98\xc3\x7c\x03\xde\xae\x9c\xe3\x70\xf3\x00\xf7\x0f\x33\xf8\x7c\x73\x3b\xe3\x2c\x4d\xe1\x09\xed\x4a\x6b\xa9\x8b\x16\x00\x2f\x52\x29\x30\x6b\xb4\x2f\x56\x7a\x04\x5f\x4a\x07\x0b\xa9\x30\x82\xbf\xa1\x75\xd2\xe8\x4b\x08\x81\x77\xbf\x9b\x66\xb0\x00\x37\xc2\xe3\x70\x95\x9e\x9b\x86\xb1\x5a\x64\x4b\x51\x20\xb8\x75\xc6\x08\x3f\xeb\xd3\x42\x6d\xcd\x5a\xe6\xe8\xc0\xa1\x5d\xa3\xbd\x70\x32\x47\x98\x4b\x9d\x4b\x5d\x38\x58\x18\x0b\xbe\x44\x28\x9e\x1e\xaf\xc1\x5b\xa1\x5d\x6d\xac\x8f\x5c\x6e\x3d\xac\xbc\x54\xf2\x3f\x74\x11\xb2\x5d\x4d\x0b\x5b\x67\xfc\x9f\x98\x8e\x33\x26\x2b\x7a\x09\x63\x96\x8c\x34\xfa\xb4\xf4\xbe\x1e\xb1\x64\x94\x19\xed\xf1\xd5\x8f\x18\x4b\x8c\xca\xfb\xa7\xc2\x28\xa1\x0b\x6e\x6c\x91\xbe\xa6\x04\xdf\xc2\x92\x51\x61\x4c\xa1\x90\x0f\x20\x54\x28\xad\xd0\x8b\x5c\x78\x41\x99\xe8\xc5\x96\x07\x8c\x0a\xe9\xcb\xd5\x9c\x67\xa6\x4a\x0b\x73\xb1\x94\x3e\xa5\xbf\xb7\x44\x29\xac\x17\x84\x38\xcb\x0c\x59\x52\xcf\x61\x14\x02\x7f\xfc\x74\x1b\xc9\x3f\x0a\x5f\xc2\x45\xd3\x8c\xd8\x84\x45\xf9\xee\xc4\x12\xbf\x3c\x3d\x5e\xb7\x9b\x84\x4a\x2c\xd1\x81\x00\x87\x1e\xcc\x02\x50\xe7\xb5\x91\xda\x3b\x10\x6b\x21\x95\x98\x2b\x04\x41\xeb\x51\xc5\x10\xbe\x98\x7b\x51\x21\xf0\xae\x1c\xa7\xa7\xa6\xe9\x05\x5b\xac\x74\xf6\xae\xc0\x38\xf3\xaf\xd0\x29\xc1\xaf\xdb\xff\xd3\x41\x99\xcf\xfd\xaf\x09\xd4\x73\x7e\xbc\x00\x04\x96\xb4\x56\x3f\xd4\x5e\x1a\xed\xe0\xf2\x0a\xbe\xff\x78\xa3\x5c\x67\x5e\x0b\x08\x2c\x49\xe0\xd0\xf2\x27\x5c\x18\x8b\xe3\x5e\xff\x99\xe9\x98\x4d\xa6\x2c\x69\x58\x62\xd1\xaf\xac\x86\xdf\x29\xb4\x0d\x08\x51\xe9\x10\x60\x66\xfe\x36\x2f\x68\xdf\x12\x84\xa6\x61\x49\x08\x56\xe8\x02\xe1\x83\x24\x5a\xdb\xf5\x3b\xf4\xa5\xc9\x1d\x21\x92\x10\xfa\xf0\x0f\xb2\xdb\xd9\xe5\x3b\x7e\xf7\xf8\xd2\x09\xc7\x92\x24\xd9\xea\xc4\x43\xd8\x86\xf4\x92\x4d\x09\x71\x83\x99\xc9\xa3\xde\x03\xc4\x13\x3e\xaf\xd0\xb5\x80\xcf\xfa\x20\xc0\xd5\x46\x3b\x8c\x88\x37\x92\x72\xce\xe9\x25\x09\x11\xc2\x05\x19\x45\xcc\x1b\xd6\xc4\xe6\xd9\x09\x02\xb2\xaa\x15\x56\x48\x1e\xd2\x11\x3a\xe1\x9c\xd4\x1e\xed\x42\x64\xc8\xfc\xa6\xc6\x61\x1e\xe7\xed\x2a\xf3\x10\xd8\x69\xfd\x0e\xc8\x07\xf0\x4e\xbf\xaf\x42\xe7\x0a\x2d\xdb\x91\x6f\x99\x77\x69\xe2\x54\x18\x54\xf7\x66\xb7\x91\xf3\xf7\x70\x92\x6a\x3c\x08\x63\x07\x1f\x77\xa5\x26\xbb\xf4\x5b\xf6\xf1\x70\xec\x46\xc8\xee\x7c\x58\x7c\x86\x8f\xc3\xf3\xf0\x41\xf2\xce\xd4\xd9\xa6\xee\x79\x4d\x60\xbc\x0f\x6a\x8d\x1d\xa0\xa6\x80\xd6\x1a\xaa\xcf\x92\x9f\x94\xba\x8e\x6f\x88\x39\xb5\xd5\x9e\xa4\xed\x11\xa1\x86\x21\x7a\x91\xcb\x84\x25\x72\x11\x83\x7e\xbb\x02\x2d\x15\xa5\xea\x0f\x89\x96\x2a\xe6\x1b\x1e\x1c\x8b\x35\x3f\x87\xda\x64\x4a\xe1\xac\x61\x21\xb4\x5e\x91\x53\x9d\xda\x6d\x63\x9f\x96\x3a\x4d\xe1\xd8\x19\x00\x49\xd3\xeb\xdd\x80\x6f\x03\x3a\xc4\x9f\xe4\x95\x2f\x85\xa7\x31\xb5\x46\x4b\xb3\x2f\xf6\x7a\x3b\xf1\xf6\x5b\xce\x76\x99\xbd\x01\x01\x2b\x87\xf6\x22\x37\x95\x90\xfa\x18\x98\xc3\xa3\x95\x95\xb0\x52\x6d\x28\x64\xb1\x52\x20\x75\x1c\xbb\x83\xc9\x79\x6c\x1f\xe3\x9f\xfb\x53\x94\xf6\xf2\x84\xcf\xbb\xc6\x0c\xd4\x12\x83\xa7\xa1\xf5\xd4\x52\x97\x57\x7d\xcc\x21\x7b\xf6\xda\x6b\xe0\xe7\xf3\x11\xa7\xda\x09\x73\x96\x53\x47\x87\xd1\x41\xab\xda\x88\x1e\xf2\x2b\xaf\x4e\xbb\xd0\x95\x88\x9e\x1d\x71\xb6\x56\x9b\xb3\xac\x3a\xba\x91\x43\x5e\x6d\x19\x9c\x69\x96\xab\x49\xc5\x3e\xea\xbc\xd3\x34\xf0\xcb\xd5\x87\x0c\xfb\x8a\xaa\x46\xeb\x58\xbb\x87\xbd\xaf\xdf\xe1\x6f\x75\x95\x6f\x91\xfc\xee\x66\xf2\x1e\x40\x74\x69\xa8\x2e\xa7\xb0\x8e\x94\x63\x13\x54\x79\x9c\x11\x72\x01\xeb\xe1\xcc\x68\xaf\x2b\x08\x4b\xdc\x44\xb7\xf3\x9c\x2e\x98\xc6\x97\x24\x71\x5f\x85\x66\x74\x25\x3c\x8c\x97\x13\x78\x29\x65\x56\x46\xa8\x52\xa0\xc8\xae\x2e\x8b\xd0\x79\xfc\xee\xd0\x9d\x8c\x5f\x0b\x6d\xb4\xcc\x84\xfa\x8a\x22\x47\xfb\x17\x6e\xe8\x2e\xe3\xbb\x42\xce\xb4\x2d\x23\x3d\x64\x42\xc3\x1c\xfb\x14\x59\x86\xce\x61\x4e\xb5\x51\xfa\x12\x6d\x57\x99\xd6\x49\x8a\xab\xed\x5e\xff\x95\xbe\xfc\x26\xd4\x0a\xdb\x91\x48\x7b\xfd\xfe\xc7\x8f\xc9\x49\xe0\x2f\xd8\x8d\x97\x93\x5d\x86\xf8\x79\xdd\x5a\x97\xf9\x57\xd6\xb0\xff\x03\x00\x00\xff\xff\x67\x8c\x44\xc0\x86\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2950, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"handlers/middlewares.gotemplate": handlersMiddlewaresGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

